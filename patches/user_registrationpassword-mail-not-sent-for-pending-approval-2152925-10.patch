diff --git a/drupal/sites/all/modules/contrib/user_registrationpassword/user_registrationpassword.module b/drupal/sites/all/modules/contrib/user_registrationpassword/user_registrationpassword.module
index 7df1006..0ec4689 100644
--- a/drupal/sites/all/modules/contrib/user_registrationpassword/user_registrationpassword.module
+++ b/drupal/sites/all/modules/contrib/user_registrationpassword/user_registrationpassword.module
@@ -171,26 +171,45 @@ function user_registrationpassword_form_user_admin_settings_alter(&$form, &$form
  * Submit handler for the user admin form.
  */
 function user_registrationpassword_admin_settings_submit(&$form, &$form_state) {
-  $value = $form_state['values']['user_registrationpassword_registration'];
-  if ($value == USER_REGISTRATIONPASS_VERIFICATION_PASS) {
+  $value_user_registrationpassword_registration = $form_state['values']['user_registrationpassword_registration'];
+  $value_user_register = $form_state['values']['user_register'];
+
+  // Only change values we require when both 'Visitors' is selected at 'Who can
+  // register accounts?' and 'Require a verification e-mail, but let users set
+  // their password directly on the registration form.' at 'Require e-mail
+  // verification when a visitor creates an account'.
+  if (($value_user_registrationpassword_registration == USER_REGISTRATIONPASS_VERIFICATION_PASS) && ($value_user_register == USER_REGISTER_VISITORS)) {
     variable_set('user_email_verification', FALSE);
-    // Prevent standard notification email to administrators and to user.
+    // Prevent standard notification email to administrators and to user
+    // only if our additional option is selected. We need this because
+    // _user_mail_notify() always sends notifications without this.
     variable_set('user_mail_register_pending_approval_notify', FALSE);
     variable_set('user_mail_register_no_approval_required_notify', FALSE);
   }
-  else {
+  elseif (($value_user_registrationpassword_registration == USER_REGISTRATIONPASS_NO_VERIFICATION) || ($value_user_registrationpassword_registration == USER_REGISTRATIONPASS_VERIFICATION_DEFAULT) && ($value_user_register == USER_REGISTER_ADMINISTRATORS_ONLY) || ($value_user_register == USER_REGISTER_VISITORS_ADMINISTRATIVE_APPROVAL)) {
     // Enable or disable core verification.
-    if ($value == USER_REGISTRATIONPASS_NO_VERIFICATION) {
+    if ($value_user_registrationpassword_registration == USER_REGISTRATIONPASS_NO_VERIFICATION) {
       variable_set('user_email_verification', FALSE);
     }
     else {
       variable_set('user_email_verification', TRUE);
     }
 
-    // Let default value.
-    // @see _user_mail_notify()
-    variable_del('user_mail_register_pending_approval_notify');
-    variable_del('user_mail_register_no_approval_required_notify');
+    // @see _user_mail_notify().
+    switch ($value_user_register) {
+      case USER_REGISTER_ADMINISTRATORS_ONLY:
+        // Nothing todo, our installer sets defaults to disabled.
+        break;
+
+      case USER_REGISTER_VISITORS:
+        variable_set('user_mail_register_no_approval_required_notify', TRUE);
+        break;
+
+      case USER_REGISTER_VISITORS_ADMINISTRATIVE_APPROVAL:
+        variable_set('user_mail_register_pending_approval_notify', TRUE);
+        break;
+
+    }
   }
 
   // Save or revert expiration limits variables.
