diff --git a/drupal/sites/all/modules/contrib/nodejs/nodejs.js b/drupal/sites/all/modules/contrib/nodejs/nodejs.js
index a9a42d7..53b8f0e 100644
--- a/drupal/sites/all/modules/contrib/nodejs/nodejs.js
+++ b/drupal/sites/all/modules/contrib/nodejs/nodejs.js
@@ -20,6 +20,9 @@ Drupal.behaviors.nodejs = {
 Drupal.Nodejs.runCallbacks = function (message) {
   // It's possible that this message originated from an ajax request from the
   // client associated with this socket.
+  if (message.hostName != Drupal.settings.nodejs.hostName) {
+    return;
+  }
   if (message.clientSocketId == Drupal.Nodejs.socket.id) {
     return;
   }
@@ -124,7 +127,8 @@ Drupal.Nodejs.checkConnection = function () {
 Drupal.Nodejs.sendAuthMessage = function () {
   var authMessage = {
     authToken: Drupal.settings.nodejs.authToken,
-    contentTokens: Drupal.settings.nodejs.contentTokens
+    contentTokens: Drupal.settings.nodejs.contentTokens,
+    hostName: Drupal.settings.nodejs.hostName
   };
   Drupal.Nodejs.socket.emit('authenticate', authMessage);
 };
diff --git a/drupal/sites/all/modules/contrib/nodejs/nodejs.module b/drupal/sites/all/modules/contrib/nodejs/nodejs.module
index 153e5ab..c143ef2 100644
--- a/drupal/sites/all/modules/contrib/nodejs/nodejs.module
+++ b/drupal/sites/all/modules/contrib/nodejs/nodejs.module
@@ -38,6 +38,7 @@ function nodejs_send_content_channel_token($channel, $notify_on_disconnect = FAL
     'token' => nodejs_generate_content_token(),
     'channel' => $channel,
     'notifyOnDisconnect' => $notify_on_disconnect,
+    'hostName' => $_SERVER['HTTP_HOST'],
   );
 
   // Http request went ok, process Node.js server response.
@@ -46,7 +47,7 @@ function nodejs_send_content_channel_token($channel, $notify_on_disconnect = FAL
       // We always set this in drupal.settings, even though Ajax requests will not
       // see it. It's a bit ugly, but it means that setting the tokens for full
       // page requests will just work.
-      drupal_add_js(array('nodejs' => array('contentTokens' => array($channel => $message->token))), array('type' => 'setting'));
+      drupal_add_js(array('nodejs' => array('hostName' => $message->hostName, 'contentTokens' => array($channel => $message->token))), array('type' => 'setting'));
 
       $node_response->token = $message->token;
       return $node_response;
@@ -830,6 +831,7 @@ class Nodejs {
   public static function sendContentTokenMessage($message) {
     self::initConfig();
     $message->clientSocketId = nodejs_get_client_socket_id();
+    $message->hostName = $_SERVER['HTTP_HOST'];
     drupal_alter('nodejs_content_channel_message', $message);
     $options = array(
       'method' => 'POST',
@@ -842,6 +844,7 @@ class Nodejs {
 
   public static function sendContentToken($message) {
     self::initConfig();
+    $message->hostName = $_SERVER['HTTP_HOST'];
     $options = array(
       'method' => 'POST',
       'data' => drupal_json_encode($message),
@@ -852,6 +855,7 @@ class Nodejs {
 
   public static function getContentTokenUsers($message) {
     self::initConfig();
+    $message->hostName = $_SERVER['HTTP_HOST'];
     $options = array(
       'method' => 'POST',
       'data' => drupal_json_encode($message),
diff --git a/drupal/sites/all/modules/contrib/nodejs/server.js b/drupal/sites/all/modules/contrib/nodejs/server.js
index 472b473..b9fd2c9 100644
--- a/drupal/sites/all/modules/contrib/nodejs/server.js
+++ b/drupal/sites/all/modules/contrib/nodejs/server.js
@@ -146,9 +146,9 @@ var clientIsInChannel = function (socket, channel) {
 /**
  * Returns the backend url.
  */
-var getBackendUrl = function () {
-  return settings.backend.scheme + '://' + settings.backend.host + ':' +
-         settings.backend.port + settings.backend.basePath + settings.backend.messagePath;
+var getBackendUrl = function (hostName) {
+  return settings.backend[hostName].scheme + '://' + settings.backend[hostName].host + ':' +
+         settings.backend[hostName].port + settings.backend[hostName].basePath + settings.backend[hostName].messagePath;
 }
 
 var getAuthHeader = function() {
@@ -168,7 +168,7 @@ var sendMessageToBackend = function (message, callback) {
   });
 
   var options = {
-    uri: getBackendUrl(),
+    uri: getBackendUrl(message.hostName),
     body: requestBody,
     headers: {
       'Content-Length': Buffer.byteLength(requestBody),
