<?php

/**
 * Implements hook_enable().
 */
function checkdesk_core_enable() {
  // Ensure CAPTCHA points are installed for new sites
  checkdesk_core_update_7015();
  // Resize "uri" column on "file_managed" table
  checkdesk_core_update_7018();
}

/**
 * Implements hook_schema().
 */
function checkdesk_core_schema() {
  $schema['checkdesk_reports_updates'] = array(
    'description' => 'The base table to associate reports with updates.',
    'fields' => array(
      'update_nid' => array('type' => 'int', 'length' => 10 , 'unsigned' => TRUE,  'not null' => TRUE),
      'report_nid' => array('type' => 'int', 'length' => 10 , 'unsigned' => TRUE,  'not null' => TRUE),
    ),
    'primary key' => array('update_nid', 'report_nid'),
  );
  
  return $schema;
}

/**
 * Implements hook_requirements().
 */
function checkdesk_core_requirements($phase) {
  $requirements = array();
  $t = get_t();
  if ($phase == 'runtime') {
    // Verify that the Facebook application keys are set.
    $requirements['facebook_keys'] = array('title' => $t('Facebook application keys'));
    $fboauth_id = variable_get('fboauth_id', NULL);
    $fboauth_secret = variable_get('fboauth_secret', NULL);
    if (!($fboauth_id && $fboauth_secret)) {
      $requirements['facebook_keys']['value'] = $t('Missing');
      $requirements['facebook_keys']['description'] =
        $t('In order to interact with Facebook, you need to create an application at ' .
           '<a href="https://developers.facebook.com/apps" target="_blank">Facebook Developers</a> ' .
           'and set the generated application keys at the ' .
           '<a href="/admin/config/people/fboauth">Facebook OAuth settings page</a>.');
      $requirements['facebook_keys']['severity'] = REQUIREMENT_WARNING;
    }
    else {
      $requirements['facebook_keys']['value'] = $t('Configured');
      $requirements['facebook_keys']['severity'] = REQUIREMENT_OK;
    }
  }
  return $requirements;

}

/**
 * Implements hook_update_N().
 * Enable remember me and change checkdesk_core weight
 */
function checkdesk_core_update_7001() {
  module_enable(array('remember_me', 'fboauth', 'twitter_signin'));
  //change module weight to get twitter_signin alteration
  db_update('system')
    ->fields(array(
      'weight' => 5,
    ))
    ->condition('name', 'checkdesk_core')
    ->execute();
}

/**
 * Implements hook_update_N().
 * Disable unneeded modules.
 */
function checkdesk_core_update_7002() {
  module_disable(array('meedan_media', 'meedan_discussion'), FALSE);
}

/**
 * Implements hook_update_N().
 * Disable unneeded modules.
 */
function checkdesk_core_update_7003() {
  module_disable(array('auto_nodetitle'), FALSE);
  drupal_uninstall_modules(array('auto_nodetitle'), FALSE);
  //change module weight to get twitter_signin alteration
  db_update('system')
    ->fields(array(
      'weight' => 5,
    ))
    ->condition('name', 'checkdesk_core')
    ->execute();
}

/**
 * Implements hook_update_N().
 * Remove duplicate "administer links" show in dropdown (issue #924)
 */
function checkdesk_core_update_7004() {
  $query = db_select('menu_links', 'ml');
  $query->condition('ml.link_path', 'admin/people');
  $query->condition('ml.link_title', 'administer users');
  $query->fields('ml', array('mlid'));
  $mlid = $query->execute()->fetchField();
  menu_link_delete($mlid);
}

/**
 * Implements hook_update_N().
 * Enable needed modules.
 */
function checkdesk_core_update_7005() {
  module_enable(array('locale', 'l10n_update', 'l10n_client'));
  $languages = language_list();
  if (!isset($languages['ar'])) {
    locale_add_language('ar');
  }
}

/**
 * Implements hook_update_N().
 * Enable needed modules.
 */
function checkdesk_core_update_7006() {
  module_enable(array('redis'));
}

/**
 * Implements hook_update_N().
 * Enable needed modules.
 */
function checkdesk_core_update_7007() {
  module_enable(array('i18n_taxonomy', 'i18n_menu'));
}

/**
 * Implements hook_update_N().
 * Enable needed modules.
 */
function checkdesk_core_update_7008() {
  module_enable(array('varnish'));
}

/**
 * Implements hook_update_N().
 * Enable needed modules.
 */
function checkdesk_core_update_7009() {
  module_enable(array('i18n_field'));
}

/**
 * Implements hook_update_N().
 * Enable needed modules.
 */
function checkdesk_core_update_7010() {
  module_enable(array('translation'));
}

/**
 * Implements hook_update_N().
 * Enable needed modules.
 */
function checkdesk_core_update_7011() {
  module_enable(array('i18n_menu_link_uuid'));
}

/**
 * Implements hook_update_N().
 * Enable needed modules.
 */
function checkdesk_core_update_7012() {
  module_enable(array('translation_helpers'));
}

/**
 * Implements hook_update_N().
 * Enable needed modules.
 */
function checkdesk_core_update_7013() {
  module_enable(array('features_translations'));
}

/**
 * Install the IFE module settings.
 */
function checkdesk_core_update_7014() {
  checkdesk_core_ensure_ife_settings();
}

/**
 * Installing CAPTCHA points.
 */
function checkdesk_core_update_7015() {
  if (db_table_exists('captcha_points')) {
    // MySQL specific code here
    db_query("REPLACE INTO captcha_points VALUES('user_pass', NULL, 'default')");
    db_query("REPLACE INTO captcha_points VALUES('user_register_form', NULL, 'default')");
    // db_query("REPLACE INTO captcha_points VALUES('webform_client_form_1', NULL, 'default')");
  }
}

/**
 * Enable the featured stories feature.
 */
function checkdesk_core_update_7016() {
  module_enable(array('checkdesk_featured_stories_feature'));
}

/**
 * Implements hook_update_N().
 * Change checkdesk_core weight
 */
function checkdesk_core_update_7017() {
  db_update('system')
    ->fields(array(
      'weight' => 6,
    ))
    ->condition('name', 'checkdesk_core')
    ->execute();
}

/**
 * Implements hook_update_N().
 * Fixes #1861 on Mantis, by resizing "uri" column on "file_managed" table
 */
function checkdesk_core_update_7018() {
  db_query("ALTER TABLE file_managed DROP KEY uri"); // Drop the `uri` index
  db_query("ALTER TABLE file_managed MODIFY uri VARCHAR(1024) COLLATE utf8_bin"); // Resize the column
  db_query("CREATE UNIQUE INDEX uri ON file_managed (uri(255))"); // Recreate the index without exceeding the InnoDB index size
  db_query("ALTER TABLE file_managed ENGINE=innodb"); // Rebuild the index
}

/**
 * Implements hook_update_N().
 * Revert "uri" to utf8_bin collation.
 */
function checkdesk_core_update_7019() {
  db_query("ALTER TABLE file_managed MODIFY uri VARCHAR(1024) COLLATE utf8_bin"); // Resize the column
  db_query("ALTER TABLE file_managed ENGINE=innodb"); // Rebuild the index
}

/**
 * Implements hook_update_N().
 * Disable module meedan_oembed_facebook for #1619.
 */
function checkdesk_core_update_7021() {
  $modules = array('meedan_oembed_facebook');
  module_disable($modules);
  drupal_uninstall_modules($modules);
}

/**
 * Implements hook_update_N().
 * Disable module user_alert and delete content for #1915.
 */
function checkdesk_core_update_7022() {
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'user_alert');
  $result = $query->execute();
  node_delete_multiple(array_keys($result['node']));
  $modules = array('user_alert');
  module_disable($modules);
  drupal_uninstall_modules($modules);
}

/**
 * Change alias for existing content.
 * Issue #1932
 */
function checkdesk_core_update_7023() {
  //Update alias for story content.
  db_query("INSERT INTO {url_alias} (source, alias, language) ( SELECT CONCAT('node/', nid) as source, CONCAT('story/', nid) as alias, language FROM {node} WHERE type = 'discussion')");
  //Update alias for report content.
  db_query("INSERT INTO {url_alias} (source, alias, language) ( SELECT CONCAT('node/', nid) as source, CONCAT('report/', nid) as alias, language FROM {node} WHERE type = 'media')");
  //Update alias for update content.
  db_query("INSERT INTO {url_alias} (source, alias, language) ( SELECT CONCAT('node/', nid) as source, CONCAT('update/', nid) as alias, language FROM {node} WHERE type = 'post')");
}

/**
 * Update alias language to be 'und'
 */
function checkdesk_core_update_7025() {
  db_update('url_alias')
    ->fields(array(
      'language' => 'und',
    ))  
    ->execute();
}

/**
 * Update l10n_update settings
 */
function checkdesk_core_update_7026() {
  variable_set('l10n_update_download_store', 'sites/all/translations');
  variable_set('l10n_update_check_mode', '2');
}

/**
 * Disable captcha / recaptcha modules.
 */
function checkdesk_core_update_7027() {
  module_disable(array('captcha'));
}

/**
 * Remove deleted comments from heartbeat activity.
 */
function checkdesk_core_update_7028() {
  $query = db_select('heartbeat_activity', 'ha');
  $query->addField('ha', 'uaid');
  $query->leftJoin('comment', 'c', 'ha.cid = c.cid');
  $query->condition('ha.cid', 0, '!=');
  $query->condition('c.cid', NULL, 'IS');
  foreach ($query->execute() as $row_object) {
    $uaids[] = $row_object->uaid;
  }
  if (!empty($uaids)) {
    heartbeat_activity_delete($uaids);
  }
}

/**
 * Create table for log updates_reports.
 */
function checkdesk_core_update_7029() {
  $schema = checkdesk_core_schema();
  db_create_table('checkdesk_reports_updates', $schema['checkdesk_reports_updates']);
}

/**
 * Log existing updates and reports.
 */
function checkdesk_core_update_7030() {
  $query = db_select('node', 'n');
  $query->addField('n', 'nid');
  $query->addField('fdb', 'body_value');
  $query->join('field_data_body', 'fdb', 'n.nid = fdb.entity_id');
  $query->condition('n.type', 'post');
  $result = $query->execute()->fetchAll();
  $data = array();
  foreach ($result as $row) {
    $matches = $reports = array();
    preg_match_all('/\[[^:]+:([0-9]+)\]/u', $row->body_value, $matches);
    if (count($matches[1])) {
      foreach ($matches[1] as $key => $nid) {
        if(!in_array($nid, $reports)) {
          $reports[] = $nid;
          $data[] = array('update_nid' =>$row->nid, 'report_nid' => $nid);
        }
      }
    }
  }
  if (count($data)) {
    $query = db_insert('checkdesk_reports_updates')->fields(array('update_nid', 'report_nid'));
    foreach ($data as $record) {
      $query->values($record);
    }
    $query->execute();
  }
}
