<?php

/**
 * @file
 * Checkdesk nodejs integration module.
 */

/**
 * Implements hook_heartbeat_activity_insert()
 * Refresh notifications when new heartbeat activity inserted
 * @todo filter which heartbeat activity to refresh the view for
 */
function checkdesk_nodejs_heartbeat_activity_save($heartbeatActivity) {
    views_autorefresh_nodejs_refresh(array('my_notifications-block'));
    $node = node_load($heartbeatActivity->nid);
    if ($node->type == 'media') {
        // Define report channels
        $channels = array();
        $channels['full'] = 'report-activity-' . $heartbeatActivity->nid;
        if ($heartbeatActivity->nid_target) {
            // update story collaboration channel
            $channels['checkdesk_collaborate'] = 'story-collaborate-' . $heartbeatActivity->nid_target;
        }
        foreach ($channels as $k => $channel) {
            $commands = array();
            $fun_name = '_checkdesk_nodejs_handle_report_activity_' . $k;
            if (function_exists($fun_name)) {
                $commands = $fun_name($heartbeatActivity->message_id, $heartbeatActivity->nid);
                if (count($commands)) {
                    $message = (object)array(
                        'channel' => $channel,
                        'commands' => $commands,
                        'callback' => 'reportReactor',
                        'message_id' => $heartbeatActivity->message_id,
                    );
                    // Send the message to the channel we created
                    nodejs_send_content_channel_message($message);
                }
            }
        }
    }
}

/**
 * Implements hook_node_view().
 */
function checkdesk_nodejs_node_view($node, $view_mode, $langcode) {
  global $user;
  if ($user->uid && $node->type == 'discussion' && $view_mode == 'checkdesk_collaborate') {
    drupal_add_js(drupal_get_path('module', 'checkdesk_nodejs') . '/js/checkdesk_nodejs.js');
    // Register nodejs channel
    $nodejs_channel = 'story-collaborate-'. $node->nid;
    nodejs_send_content_channel_token($nodejs_channel);
  }
  elseif ($node->type == 'media' && $view_mode == 'full') {
      drupal_add_js(drupal_get_path('module', 'checkdesk_nodejs') . '/js/checkdesk_nodejs.js');
      // Register nodejs channel
      $nodejs_channel = 'report-activity-'. $node->nid;
      nodejs_send_content_channel_token($nodejs_channel);
  }
}

/**
 * Implements hook_node_postsave();
 * Reacts to a node insert/update/delete
 */
function checkdesk_nodejs_node_postsave($node) {
  if ($node->type == 'media') {
      views_autorefresh_nodejs_refresh(array('desk_reports-block'));
  }
}

/**
 * Custom function to render activity for full view mode.
 */
function _checkdesk_nodejs_handle_report_activity_full($activity, $nid) {
    return _checkdesk_nodejs_handle_report_activity($activity, $nid);
}

/**
 * Custom function to render activity for checkdesk_collaborate mode.
 */
function _checkdesk_nodejs_handle_report_activity_checkdesk_collaborate($activity, $nid) {
    return _checkdesk_nodejs_handle_report_activity($activity, $nid);
}

function _checkdesk_nodejs_handle_report_activity($activity, $nid) {
    $commands = array();
    switch ($activity) {
        case 'status_report':
            $node = node_load($nid);
            $report_status = _checkdesk_report_status($node);
            $commands[] = ajax_command_insert('.media-status-report-' . $node->nid, $report_status['status'], 'replaceWith');
            break;
        case 'checkdesk_fact_checking_on':
        case 'checkdesk_fact_checking_set':
            $node = node_load($nid);
            if ($activity == 'checkdesk_fact_checking_set') {
                $node->field_rating[LANGUAGE_NONE][0]['tid'] = 4;
            }
            $report_status = _checkdesk_report_status($node);
            $commands[] = ajax_command_insert('.media-status-report-' . $node->nid, $report_status['status'], 'replaceWith');
            $node_view = node_view($node);
            $node_view['comments'] = comment_node_page_additions($node);
            // update activity stream
            $report_activity = theme(
                'checkdesk_core_report_activity', array('node' => $node, 'content' => $node_view, 'view_mode' => 'full')
            );
            $commands[] = ajax_command_insert('.report-activity-node-' . $node->nid, $report_activity, 'replaceWith');
            break;
        //case 'checkdesk_comment_on_report':
        case 'new_comment_report':
            $node = node_load($nid);
            $term = isset($node->field_rating[LANGUAGE_NONE][0]['taxonomy_term']) ?
                $node->field_rating[LANGUAGE_NONE][0]['taxonomy_term'] :
                taxonomy_term_load($node->field_rating[LANGUAGE_NONE][0]['tid']);
            $status_name = $term->name;
            if ($status_name !== 'Not Applicable') {
                $activity_report = _checkdesk_load_activity_report($node->nid);
                if ($activity_report['total_rows']) {
                    $count = theme(
                        'checkdesk_core_report_activity_count', array('count' => $activity_report['total_rows'], 'nid' => $node->nid)
                    );
                    $activity = theme(
                        'checkdesk_core_report_activity_stream', array('activity' => $activity_report['view_output'], 'nid' => $node->nid)
                    );
                    // Update media count
                    $commands[] = ajax_command_insert('.media-activity-count-node-' . $node->nid, $count, 'replaceWith');
                    // Update media activity
                    $commands[] = ajax_command_insert('.media-activity-node-' . $node->nid, $activity, 'replaceWith');
                }
            }
            break;
    }
    return $commands;
}