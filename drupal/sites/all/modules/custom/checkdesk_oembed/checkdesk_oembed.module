<?php

// The version of our embed support. This number should be incremented every
// time a change is made which causes the embed/* URLs to change behaviour.
define('CHECKDESK_OEMBED_VERSION', '1.0');

require_once dirname(__FILE__) . '/checkdesk_oembed.oembedprovider.inc';

/**
 * Implements hook_custom_theme().
 *
 * Switches to the 'checkdesk_embed' theme when on the embed page.
 */
function checkdesk_oembed_custom_theme() {
  if (arg(0) == 'embed') {
    return 'checkdesk_embed';
  }
}

/**
 * Implements hook_menu().
 */
function checkdesk_oembed_menu() {
  $items = array();
  $items['embed/%node'] = array(
    'title' => 'Embedded Checkdesk reports or stories',
    'page callback' => 'checkdesk_oembed_embed',
    'page arguments' => array(1),
    'access callback' => 'checkdesk_oembed_embed_access',
    'access arguments' => array(1),
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Menu access callback to limit widget embeds to only 'media' node type.
 */
function checkdesk_oembed_embed_access($node) {
  $types = variable_get('checkdesk_oembed_embed_types', array('media', 'discussion'));
  return $node && in_array($node->type, $types) && node_access('view', $node);
}

/**
 * Renders the embedded version of a report using the meedan_oembed view mode.
 *
 * This is what is INSIDE of the IFRAME.
 */
function checkdesk_oembed_embed($node) {
  drupal_add_library('meedan_iframes', 'meedan_iframes.child');

  drupal_add_js(array('meedanIframes' => array('contentSelector' => '#main')), 'setting');

  return node_view_multiple(array($node->nid => $node), 'meedan_oembed');
}

/**
 * Implements hook_node_view().
 */
function checkdesk_oembed_node_view($node, $view_mode, $langcode) {
  if ($view_mode == 'full' && checkdesk_oembed_embed_access($node)) {
    $site = variable_get('site_name', 'Checkdesk');
    drupal_add_html_head(
      array(
        '#tag' => 'link',
        '#attributes' => array(
          'href' => checkdesk_oembed_url($node->nid, array('format' => 'json')),
          'rel' => 'alternate',
          'type' => 'application/json+oembed',
          'title' => t('@site oEmbed Profile', array('@site' => $site)),
        ),
      ),
      'checkdesk_oembed_provider_json'
    );
    drupal_add_html_head(
      array(
        '#tag' => 'link',
        '#attributes' => array(
          'href' => checkdesk_oembed_url($node->nid, array('format' => 'xml')),
          'rel' => 'alternate',
          'type' => 'application/xml+oembed',
          'title' => t('@site oEmbed Profile', array('@site' => $site)),
        ),
      ),
      'checkdesk_oembed_provider_xml'
    );
  }
}

/**
 * Creates a full URL to the oEmbed information for our provider.
 */
function checkdesk_oembed_url($nid, $attributes) {
  $defaults = array(
    'url' => url('node/' . $nid, array('absolute' => TRUE, 'language' => (object) array('language' => FALSE), 'alias' => TRUE)),
    'format' => 'json',
  );
  $options = array(
    'query' => array_merge($defaults, $attributes),
    'absolute' => TRUE,
    'language' => (object) array('language' => FALSE)
  );
  return url('oembed/endpoint', $options);
}
