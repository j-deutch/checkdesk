<?php
/**
 * @file
 * Main checkdesk_tour file
 */

/**
 * Implements hook_init().
 */
function checkdesk_tour_init() {
  drupal_add_js(array('basePathCheckdeskTourPath' => '/' . drupal_get_path('module', 'checkdesk_tour')), 'setting');
  //drupal_add_js(drupal_get_path('module', 'checkdesk_tour') . '/js/inject_bootstrap.js');
  drupal_add_js(drupal_get_path('module', 'checkdesk_tour') . '/js/tour.js');
}

/**
 * Check if a user has taken a tour
 */
function _checkdesk_tour_user_took_tour($user, $tour) {
  $count = db_query("SELECT COUNT(uid) FROM {checkdesk_tour_users} WHERE uid = :uid AND tid = :tour", array(':uid' => $user->uid, ':tour' => $tour->name))->fetchField();
  return (bool)$count;
}

/**
 * User takes tour.
 */
function _checkdesk_tour_user_takes_tour($user, $tour) {
  // Add other bootstrap-tour options here
  foreach ($tour->steps as $index => $step) {
    $tour->steps[$index]['title'] = t($tour->steps[$index]['title']);
    $tour->steps[$index]['content'] = t($tour->steps[$index]['content']);
    $tour->steps[$index]['placement'] = 'bottom';
    $tour->steps[$index]['tid'] = $tour->name;
  }

  drupal_add_js(array('checkdeskTour' => array($tour->name => array('steps' => $tour->steps))), 'setting');
  if ($user) {
    db_insert('checkdesk_tour_users')->fields(array('uid' => $user->uid, 'tid' => $tour->name))->execute();
  }
}

/**
 * Implements hook_page_build().
 */
function checkdesk_tour_page_build(&$page) {
  global $user;

  // If tour is in URL, play this tour
  if (isset($_GET['tour'])) {
    $tour = checkdesk_tour_preset_load($_GET['tour']);
    if ($tour) {
      _checkdesk_tour_user_takes_tour(NULL, $tour);
    }
  }

  // Otherwise, check if there is any auto tour to be displayed
  else {
    ctools_include('export');
    $tours = ctools_export_load_object('checkdesk_tour_presets');

    foreach ($tours as $tour) {

      if ($tour->auto && !empty($tour->roles) && !_checkdesk_tour_user_took_tour($user, $tour)) {

        $roles = array();
        foreach ($tour->roles as $rid => $selected) {
          if ($selected) {
            $roles[] = $rid;
          }
        }

        $match = array_intersect(array_keys($user->roles), $roles);
        if (!empty($match)) {
          _checkdesk_tour_user_takes_tour($user, $tour);
        }

      }
    }
  }
}

/**
 * Implements hook_permission().
 */
function checkdesk_tour_permission() {
  return array(
    'administer checkdesk tour' => array(
      'title' => 'Administer Checkdesk tour',
    ),
  );
}

/**
 * Implements of hook_ctools_plugin_directory().
 */
function checkdesk_tour_ctools_plugin_directory($module, $type) {
  if ($type == 'export_ui') {
    return 'plugins/export_ui';
  }
}

/**
 * Implements of hook_ctools_plugin_api().
 */
function checkdesk_tour_ctools_plugin_api($owner, $api) {
  if ($owner == 'checkdesk_tour' && $api == 'default_checkdesk_tour_presets') {
    return array('version' => 1);
  }
}

/**
 * Implements hook_default_checkdesk_tour_presets().
 *
 * Provide a default preset.
 */
function checkdesk_tour_default_checkdesk_tour_presets() {
  $export = array();

  $preset = new stdClass();
  $preset->api_version = 1;
  $preset->name = 'checkdesk_tour_default_preset';
  $preset->title = 'Default Preset';
  $preset->roles = array();
  $preset->steps = array();
  $preset->auto = 1;
  $export['checkdesk_tour_default_presets'] = $preset;

  return $export;
}

/**
 * Load a single preset.
 *
 * @param string $pid
 *   The preset identifier.
 */
function checkdesk_tour_preset_load($pid) {
  ctools_include('export');
  $result = ctools_export_load_object('checkdesk_tour_presets', 'names', array($pid));
  if (isset($result[$pid])) {
    return $result[$pid];
  }
}

/**
 * Export a checkdesk_tour_preset.
 *
 * @param object $obj
 *   The checkdesk_tour object.
 * @param string $indent
 *   An identifier.
 *
 * @return string
 *   The export definition.
 */
function checkdesk_tour_preset_export($obj, $indent = '') {
  ctools_include('export');
  $output = ctools_export_object('checkdesk_tour_presets', $obj, $indent);
  return $output;
}
