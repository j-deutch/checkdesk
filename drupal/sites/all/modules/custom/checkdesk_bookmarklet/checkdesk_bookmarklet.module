<?php

/**
 * Implements hook_init().
 *
 * Add a JavaScript file after form was submitted.
 */
function checkdesk_bookmarklet_init() {
  if (isset($_GET['meedan_bookmarklet_submitted'])) {
    drupal_add_js(drupal_get_path('module', 'checkdesk_bookmarklet') . '/js/checkdesk_bookmarklet_submitted.js');
  }
  // For all main checkdesk pages, when not inside of an IFRAME.
  if (!isset($_GET['meedan_bookmarklet'])) {
    drupal_add_js(drupal_get_path('module', 'checkdesk_bookmarklet') . '/js/checkdesk_bookmarklet.js');
  }
}


/**
 * Implements of hook_form_alter().
 */
function checkdesk_bookmarklet_form_alter(&$form, $form_state, $form_id) {

  // Custom report form for bookmarklet
  if ($form_id == variable_get('meedan_bookmarklet_content_type', 'page') . '_node_form') {
    global $user;
    $form['actions']['draft']['#access'] = FALSE;
    if (!empty($GLOBALS['meedan_bookmarklet_page_template'])) {
      // Just show explanation about the bookmarklet
      $form['help'] = array(
        '#markup' => '<div id="meedan_bookmarklet_help"><span>' . t('Help') . '<p>' . t('When you submit a report it becomes available for fact-checking and may be included in a blog post by our team.') . '</p></span></div>',
        '#weight' => -1,
      );

      $form['actions']['cancel'] = array(
        '#markup' => '<input type="reset" onclick="window.parent.postMessage(\'close\', \'*\'); return false;" class="form-submit" value="' . t('Cancel') . '" id="meedan_bookmarklet_cancel_button" />',
        '#weight' => 100,
      );

      // Additional processing for internal bookmarklet
      global $base_url;
      if ((isset($_GET['meedan_bookmarklet_prepopulate']) && preg_match('/^' . preg_quote($base_url, '/') . '/', $_GET['meedan_bookmarklet_prepopulate']['field_link'])) || empty($_GET['meedan_bookmarklet_prepopulate']['field_link'])) {
        foreach (array('title', 'body', 'field_link') as $field) {
          if (isset($form[$field])) $form[$field][LANGUAGE_NONE][0]['#default_value'] = '';
        }
        $form['#after_build'][] = '_checkdesk_bookmarklet_load_javascript_for_internal_bookmarklet';
      }
    }
  }
}


/*
 * Load JavaScript file for internal bookmarklet.
 */
function _checkdesk_bookmarklet_load_javascript_for_internal_bookmarklet($form, &$form_state) {
  drupal_add_js(drupal_get_path('module', 'checkdesk_bookmarklet') . '/js/checkdesk_internal_bookmarklet.js');
  return $form;
}

/*
 * Implements hook_node_insert().
 *
 * Set flag for report from bookmarklet.
 */
function checkdesk_bookmarklet_node_insert($node) {
  if ($node->type == variable_get('meedan_bookmarklet_content_type', 'page')) {
    if (!empty($GLOBALS['meedan_bookmarklet_page_template'])) {
      // Hack to avoid other hooks from not being called: http://drupal.org/node/130734#comment-3835244
      $_GET['destination'] = 'meedan_bookmarklet/message?meedan_bookmarklet=1&meedan_bookmarklet_submitted=1&meedan_bookmarklet_nid=' . $node->nid . '&meedan_bookmarklet_url=' . urlencode($node->field_link[LANGUAGE_NONE][0]['url']);
    }
  }
}

/**
 * Implements hook_preprocess_html().
 *
 * Change title after report was submitted.
 * Add a Close button after report was submitted.
 * Adds an id when bookmarklet is opened from inside the site.
 */
function checkdesk_bookmarklet_preprocess_html(&$variables, $hook) {
  global $base_url, $user;

  // Reload page on clicking close
  $reset_url = url('node/add/media', array('absolute' => TRUE, 'query' => array('meedan_bookmarklet' => 1)));
  $variables['meedan_bookmarklet_close'] = l('<span>[X]</span>', '', array('html' => TRUE, 'attributes' => array('id' => 'meedan_bookmarklet_close', 'onclick' => 'window.parent.postMessage(\'destroy\', \'*\'); window.location.href = \'' . $reset_url . '\'; return false;')));

  // If the user is not logged in, replace bookmarklet title to help text
  if(isset($variables['meedan_bookmarklet_title']) && !user_is_logged_in()) {
    $variables['meedan_bookmarklet_title'] = t('To ' . strtolower(variable_get('meedan_bookmarklet_title', '')) . ', you need to log in.');
  }

  if (isset($_GET['meedan_bookmarklet_submitted'])) {

    $preview = _checkdesk_bookmarklet_media_preview(urldecode($_GET['meedan_bookmarklet_url']));
    $variables['meedan_bookmarklet_title'] = isset($preview['error']) ? $preview['error']['message'] : $preview['preview'];

    $attributes = array('target' => '_blank', 'onclick' => 'if (window.parent.location.host == window.location.host) { window.parent.location.href = this.href; return false; }');

    $variables['meedan_bookmarklet_messages'] = array('<span class="meedan-bookmarklet-success">' . t('Success: Report created') . '</span>');

    if (in_array('journalist', $user->roles) || in_array('administrator', $user->roles)) {
      $variables['meedan_bookmarklet_messages'][] = t('Now let\'s !fact_check and !blog.', array(
        '!fact_check' => l(t('fact-check it'), url('user/' . $user->uid, array('absolute' => TRUE)), array('attributes' => $attributes)),
        '!blog' => l(t('blog about it'), url('node/add/post', array('absolute' => TRUE, 'query' => array('report' => $_GET['meedan_bookmarklet_nid']))), array('attributes' => $attributes)),
      ));
    }
    else {
      $variables['meedan_bookmarklet_messages'][] = l(t('View your reports.'), url('user/' . $user->uid, array('absolute' => TRUE)), array('attributes' => $attributes));
    }

    $variables['footer'] = '<input type="reset" onclick="window.parent.postMessage(\'destroy\', \'*\'); window.location.href = \'' . $reset_url . '\'" value="' . t('Close') . '" class="form-submit" id="meedan_bookmarklet_cancel_button" />';

  }

  if ((isset($_GET['meedan_bookmarklet_prepopulate']) && preg_match('/^' . preg_quote($base_url, '/') . '/', $_GET['meedan_bookmarklet_prepopulate']['field_link'])) || empty($_GET['meedan_bookmarklet_prepopulate']['field_link'])) {
    $variables['body_class'] = 'meedan-bookmarklet-internal';
  }
}
