<?php

/**
 * Implements hook_init().
 */
function meedan_oembed_twitter_init() {
  drupal_add_js(drupal_get_path('module', 'meedan_oembed_twitter') . '/meedan_oembed_twitter.js');
}

/**
 * Implements hook_meedan_oembed()
 */
function meedan_oembed_twitter_meedan_oembed() {
  return array(
    'twitter' => array(
      'callback' => 'meedan_oembed_twitter_handler',
      'provider_name' => 'meedan_oembed_twitter',
    )
  );
}

/**
 * Implementation of hook_theme().
 */
function meedan_oembed_twitter_theme() {
  $path = drupal_get_path('module', 'meedan_oembed_twitter') . '/theme';
  $file = 'meedan_oembed_twitter.theme.inc';

  return array(
    'meedan_oembed_twitter_tweet' => array(
      'variables' => array('tweet' => NULL),
      'path' => $path,
      'file' => $file,
    ),
    'oembed__link__meedan_oembed_twitter' => array(
      'variables' => array('embed' => NULL),
      'template' => 'oembed-twitter',
      'path' => $path,
      'file' => $file,
    ),
    'meedan_oembed_thumbnail_twitter' => array(
      'variables' => array('url' => NULL, 'attributes' => NULL, 'title' => NULL),
      'template' => 'oembed-thumbnail',
      'path' => $path,
      'file' => $file,
    ),
  );
}

/**
 * Attempts to create an oembed response from a tweet.
 */
function meedan_oembed_twitter_handler($provider, $url) {
  try {
    
    $curl_request = curl_init();
    curl_setopt($curl_request, CURLOPT_URL, 'https://api.twitter.com/1.1/statuses/oembed.json?url=' . $url);
    curl_setopt($curl_request, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($curl_request, CURLOPT_SSL_VERIFYPEER, false);
    $json = curl_exec($curl_request);
    curl_close($curl_request);

    $data = json_decode($json);

    if (empty($data)) {
      watchdog('MeedanOEmbedTwitter', t('Empty response'));
      return NULL;
    }
    if (isset($data->errors)) {
      watchdog('MeedanOEmbedTwitter', t('Error from Twitter: ') . $data->errors[0]->message);
      return NULL;
    }

    // Reject overly long 2 byte sequences, as well as characters above U+10000
    $data->html = preg_replace('/[\x00-\x08\x10\x0B\x0C\x0E-\x19\x7F]'.
      '|[\x00-\x7F][\x80-\xBF]+'.
      '|([\xC0\xC1]|[\xF0-\xFF])[\x80-\xBF]*'.
      '|[\xC2-\xDF]((?![\x80-\xBF])|[\x80-\xBF]{2,})'.
      '|[\xE0-\xEF](([\x80-\xBF](?![\x80-\xBF]))|(?![\x80-\xBF]{2})|[\x80-\xBF]{3,})/S',
      '', $data->html);

    // Reject overly long 3 byte sequences and UTF-16 surrogates
    $data->html = preg_replace('/\xE0[\x80-\x9F][\x80-\xBF]'.
      '|\xED[\xA0-\xBF][\x80-\xBF]/S', '', $data->html);

    $embed = $data;

    // Set information Twitter doesn't give to us
    $text = strip_tags($data->html);
    $embed->description = $text;
    $embed->link_description = $text;
    if (mb_strlen($text, 'utf-8') > 23) {
      $text = mb_substr($text, 0, 20, 'utf-8') . '...';
    }
    $embed->title = 'Twitter / ' . $embed->author_name . ': ' . $text;
    $embed->original_url = $url;
    $embed->favicon_link = url('http://g.etfv.co/'. $embed->original_url, array('absolute' => TRUE));
    $embed->provider = $provider;

    $tagname = 'p';
    $pattern = "/<$tagname ?.*>(.*)<\/$tagname>/";
    preg_match($pattern, $data->html, $matches);
    $embed->body = $matches[0];
    
    return $embed;
  } catch (Exception $e) {
    watchdog('MeedanOEmbedTwitter', t('Could not handle Twitter: ') . $e->getMessage());
  }
  return NULL;
}

/**
 * Implements hook_meedan_oembed_embed_alter().
 * Localize embeds.
 */
function meedan_oembed_twitter_meedan_oembed_embed_alter(&$embed) {
  global $language;

  if (isset($embed->provider_name) && $embed->provider_name === 'Twitter') {
    // Let's try to identify language based on the Unicode
    // First, remove links and Twitter names
    $dir = 'ltr';
    if (isset($embed->description)) {
      $text = preg_replace('/http:\/\/[^\s]+/', '', $embed->description);
      $text = preg_replace('/@[^\s]+/', '', $text);
      $text = preg_replace('/&mdash;.*/', '', $text);
      if (preg_match('/\p{Arabic}/u', $text)) {
        $dir = 'rtl';
      }
    }
    if (isset($embed->html)) {
      $embed->html = preg_replace('/(<span dir="(rtl|ltr)"><\/span>)?<blockquote[^>]*>/', '<span dir="' . $dir . '"></span><blockquote class="twitter-tweet" lang="' . $language->language . '">', $embed->html);
    }
  }
}
