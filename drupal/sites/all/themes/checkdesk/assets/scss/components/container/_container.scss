.cd-container {
	@include ctb-clearfix;
}

.cd-container-inner {
	margin: $absolute-line-height/1.2 0;
  padding: 20px 0 0;
  position: relative;

	.cd-container & {
		border-top: 1px solid $firefly10;	
	}

}

.cd-container-header {
  margin-top: 10px;
  margin-bottom: 30px;
}

.cd-container-header-title {
  text-align: center;
  color: $firefly60;
  a { 
    @include ctb-linkColor($firefly60);
    text-decoration: none;
  }
  @if $from-direction == 'left' {
    letter-spacing: -0.5px;
  }
}

// align title to normal for section pages
.cd-container-section {
  .cd-container-header-title {
    text-align: $alpha;
  }
}

// more link
.cd-container .cd-container-inner .more-link {
  position: absolute;
  top: 30px;
  #{$omega}: 0;
  a { 
    @include ctb-linkColor($firefly40); 
    text-decoration: none;
  }
}

// load more
.cd-container .cd-container-inner {
  // add styles for load more pager
  @include ctb-load-more-pager;
}



// remove border from first container on section pages
.page-section .cd-container-section:first-child .cd-container-inner,
.page-sections .cd-container-section:first-child .cd-container-inner {
  border-top: 0 none;
  margin-top: 0;
  padding-top: 0;
  .more-link {
    top: 0;
  }
}

// remove border from first container on section pages
.page-section .cd-container-section:last-child,
.page-sections .cd-container-section:last-child {
  margin-bottom: 60px;
}


// slices
@include cd-responsive('min-width: #{$width-tablet}') {
  .cd-slice-wrapper {
    margin: 0 -8px;
  }
}

.cd-slice-item {
  position: relative;
  margin-bottom: 10px;
}

@include cd-responsive('min-width: #{$width-tablet}') {
  .cd-slice-item {
    @include flexbox;
  }
}


// item 
@media (min-width: 1px) and (max-width: #{$width-tablet}) {
  .cd-item {
    width: 100%;
  }
  .cd-item-has-image {
    position: relative;
  }
}

@include cd-responsive('min-width: #{$width-tablet}') {
  .cd-item {
    @include flexbox;
    @include flex(1 1 auto);
    margin-#{$alpha}: 8px;
    margin-#{$omega}: 8px;
  }
}


.cd-item-container {
  position: relative;
  a { 
    color: $firefly60;
    text-decoration: none;
  }
  .cd-item-meta a {
    color: $firefly30;
  }
}

@media (min-width: 1px) and (max-width: #{$width-tablet}) {
  .cd-item-has-image .cd-item-container {
    display: block;
    padding-#{$alpha}: 124px;
    &:before {
      content: '';
      position: absolute;
      top: 0;
      #{$alpha}: 0;
      #{$omega}: 0;
      z-index: 2;
    }
  }
}

@include cd-responsive('min-width: #{$width-tablet}') {
  .cd-item-container {
    @include flexbox;
    @include flex-direction(column);
    @include flex(1 1 auto);
    @include box-sizing(border-box);
    width: 0;
  }
}

.cd-item-container:hover {
  a { 
    color: $firefly80;
    text-decoration: none;
  }
  .cd-item-meta a {
    color: $firefly40;
  }
}

.cd-item-media-wrapper {
  position: relative;
  @include box-sizing(border-box);
}

@media (min-width: 1px) and (max-width: #{$width-tablet}) {
  .cd-item-media-wrapper {
    position: absolute;
    display: block;
    width: 120px;
    margin-#{$alpha}: -120px;
    margin-top: 4px;
    margin-bottom: 4px;
  }
}

.cd-item-image-container {
  display: block;
}

.cd-item-content {
  padding-top: 4px;
  padding-#{$alpha}: 8px;
  padding-#{$omega}: 8px;
  padding-bottom: 50px;
  @include box-sizing(border-box);
}

@media (min-width: 1px) and (max-width: #{$width-tablet}) {
  .cd-item-content {
    position: relative;
    display: block;
    padding-bottom: 40px;
    min-height: 72px;
  }
}

@include cd-responsive('min-width: #{$width-tablet}') {
  .cd-item-content { 
    min-height: 132px;
  }
}

.cd-item-header {
  font-size: 16px;
  @if $from-direction == left {
    line-height: 20px;
    letter-spacing: -0.4px;
  }
  @include cd-serif-family;
  padding-bottom: 10px;
}

.cd-item-lead {
  padding-bottom: 10px;
  color: $firefly60;
}

@media (min-width: 1px) and (max-width: #{$width-tablet}) {
  .cd-item-header {
    font-size: 14px;
    @if $from-direction == left {
      line-height: 18px;
      letter-spacing: -0.3px;
    }
    padding-bottom: 5px;
  }
  .cd-item-lead {
    display: none;
  }
}

.cd-item-title {
  font: inherit;
  line-height: inherit;
  word-wrap: break-word;
  margin-bottom: 0;
}

.cd-item-content-label {
  color: $firefly40;
  &:after {
    content: '/';
    display: inline-block;
    color: $firefly20;
    font-weight: normal;
    margin-#{$alpha}: 4px;
  }
}

.cd-item-meta {
  position: absolute;
  bottom: 4px;
  #{$alpha}: 8px;
  #{$omega}: 8px;
  font-size: 14px;
  line-height: 1.3;
  color: $firefly30;
}

.cd-item-meta .icon-comment-o { 
  @include icon(comment-o);
  &:before, &:after { 
    margin: 0;
  }
}

// make comment link above
// the faux block link overlay
.cd-item-meta .cd-item-count a {
  position: relative;
  z-index: 1;
}

.cd-item-meta .byline {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.cd-item-meta .timestamp {
  float: $alpha;
  padding-#{$omega}: 10px;
}

// link rows
@include cd-responsive('min-width: #{$width-tablet}') {
  .l-row {
    @include flexbox;
    @include flex-direction(row);
    @include flex-wrap(nowrap);
    @include align-content(stretch);
    @include align-items(stretch);
    width: 100%; // Prevent consecutive rows from flexing together in FF
  }

  .l-row-item {
    @include flex(1);
    @include flex-grow(1);
    @include flex-basis(0);
    width: 0; // Prevent items to grow out of their parent in FF
  }

  // We only need this functionality for 2 & 4 column rows.
  @for $column from 2 through 4 {
    @for $span from 1 through 5 {
      .l-row-cols-#{$column} {
        .l-row-item-span-#{$span} {
            @include flex($span 1 auto);
        }
      }
    }
  }
}

// container to handle links
.cd-linkslist-container {
  position: relative;
}

.cd-linkslist {
  width: 100%;
  @include flexbox;
  @include flex-wrap(wrap);
  .cd-slice-item {
    @include cd-responsive('min-width: #{$width-tablet}') {
      @include flex-grow(0);
      @include flex-basis(100% / 4);
    }
  }
}


// links list
.l-list {
  width: 100%;
  @include cd-responsive('min-width: #{$width-tablet}') {
    @include flexbox;
    @include flex-wrap(wrap);
  }
}

.l-list-item {
  @include flex-grow(0);
  @include flex-basis(100%);
}

@for $column from 1 through 4 {
  .l-list-columns-#{$column} {
    .l-list-item {
      @include cd-responsive('min-width: #{$width-tablet}') {
        width: 100% / $column;
        @include flex-basis(100% / $column);
      }
    }
  }
}


// tones
.tone-default-item {
  background-color: #fff;
  color: $firefly80;
}